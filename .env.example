### Example environment for development
### Copy this file to `.env` and fill in real values before running

# App / Strapi
NODE_ENV=development

# Database (for dev you can use host Postgres or a container)
# Use host.docker.internal if you run Postgres on your host (Docker Desktop)
DATABASE_CLIENT=postgres
DATABASE_HOST=host.docker.internal
DATABASE_PORT=5432
DATABASE_NAME=gamified_launchpad
DATABASE_USERNAME=strapi
DATABASE_PASSWORD=changeme

# Strapi security keys (generate secure random values in production)
# See notes below for commands to generate values on Windows (PowerShell)
APP_KEYS=replace_with_random_app_keys_comma_separated
API_TOKEN_SALT=replace_with_random_value
ADMIN_JWT_SECRET=replace_with_random_value
JWT_SECRET=replace_with_random_value

# Optional: admin user (not recommended to keep real creds in repo)
STRAPI_ADMIN_USERNAME=admin
STRAPI_ADMIN_PASSWORD=admin
STRAPI_ADMIN_EMAIL=admin@example.com

# Notes:
# - Generate random values for APP_KEYS (comma-separated list of at least 2 items),
#   API_TOKEN_SALT, ADMIN_JWT_SECRET and JWT_SECRET before using in production.
# - Example PowerShell to generate a 64-char random string:
#   -join ((65..90)+(97..122)+(48..57) | Get-Random -Count 64 | ForEach-Object {[char]$_})
### Local environment example for development
### Copy this file to `.env` and replace the placeholder values with generated secrets

# App keys (comma separated list). Strapi expects multiple app keys for rotation.
APP_KEYS=replace_with_generated_key1,replace_with_generated_key2,replace_with_generated_key3,replace_with_generated_key4

# Salt for API tokens
API_TOKEN_SALT=replace_with_generated_salt

# Admin panel JWT secret (used by admin.SessionManager)
ADMIN_JWT_SECRET=replace_with_generated_admin_jwt_secret

# JWT secret used by the application
JWT_SECRET=replace_with_generated_jwt_secret

# Optional Postgres connection for dev (if you use DB container)
DATABASE_CLIENT=sqlite
# If you use Postgres locally, set these instead:
# DATABASE_CLIENT=postgres
# DATABASE_HOST=postgres
# DATABASE_PORT=5432
# DATABASE_NAME=strapi
# DATABASE_USERNAME=strapi
# DATABASE_PASSWORD=changeme

### How to generate secure values (examples):
### Using Node (requires Node installed):
### node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
### Or OpenSSL:
### openssl rand -hex 32
